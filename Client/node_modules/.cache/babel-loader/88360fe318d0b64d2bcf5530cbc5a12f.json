{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dhawal Verma\\\\Desktop\\\\reactapp\\\\Client\\\\src\\\\Components\\\\ShowNotice\\\\ShowNotice.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport axios from 'axios';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  id: 'poster',\n  label: 'Notice Poster',\n  minWidth: 170\n}, {\n  id: 'text',\n  label: 'Notice Text',\n  minWidth: 100\n}, {\n  id: 'hostel',\n  label: 'Hostel',\n  minWidth: 170,\n  align: 'right'\n}, {\n  id: 'expiry',\n  label: 'Expires On',\n  minWidth: 170,\n  align: 'right'\n}];\n\nfunction createData(poster, text, hostel, expiry) {\n  return {\n    poster,\n    text,\n    hostel,\n    expiry\n  };\n} // const rows=[createData(\"fbhb\",\"fjn\",\"fjen\",\"frr\")]\n\n\nconst useStyles = makeStyles({\n  root: {\n    width: '60%',\n    margin: 'auto'\n  },\n  container: {\n    maxHeight: 380,\n    marginTop: '0.5rem'\n  },\n  title: {\n    color: 'white'\n  },\n  calendar: {\n    background: 'white'\n  },\n  ShowButton: {\n    background: 'White',\n    color: 'Black',\n    // padding: '15px 15px 15px 15px',\n    marginTop: '2rem',\n    '&:hover': {\n      background: \"Black\",\n      color: \"white\",\n      border: \"1px solid white\"\n    }\n  }\n});\nexport default function StickyHeadTable() {\n  _s();\n\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [data, setData] = useState([]);\n  const [date, setDate] = useState(new Date().toISOString().slice(0, 10));\n  const [isLoading, setLoading] = useState(false);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [data, date]);\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      const res = await axios.get(`http://localhost:5000/notice/${date}`);\n      setData(res.data.notice);\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      console.log(error);\n    }\n  };\n\n  const rows = data.map(item => createData(item.poster, item.description, item.hostel, item.expires_at));\n  let history = useHistory();\n\n  function noticeBoard() {\n    history.push('/add');\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      className: classes.title,\n      children: \" NOTICES \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      className: classes.calendar,\n      name: \"date\",\n      value: date,\n      onChange: e => setDate(e.target.value),\n      icon: \"lock\",\n      type: \"Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        className: classes.ShowButton,\n        onClick: noticeBoard,\n        children: \"Add Notice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        className: classes.container,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          \"aria-label\": \"sticky table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                align: column.align,\n                style: {\n                  minWidth: column.minWidth\n                },\n                children: column.label\n              }, column.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                role: \"checkbox\",\n                tabIndex: -1,\n                children: columns.map(column => {\n                  const value = row[column.id];\n                  return /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: column.align,\n                    children: column.format && typeof value === 'number' ? column.format(value) : value\n                  }, column.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 49\n                  }, this);\n                })\n              }, row.code, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [10, 25, 100],\n        component: \"div\",\n        count: rows.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onChangePage: handleChangePage,\n        onChangeRowsPerPage: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(StickyHeadTable, \"cT9IZaDrOXAUKPqgqCJb0jLEXsw=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = StickyHeadTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"StickyHeadTable\");","map":{"version":3,"sources":["C:/Users/Dhawal Verma/Desktop/reactapp/Client/src/Components/ShowNotice/ShowNotice.jsx"],"names":["React","useState","useEffect","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TextField","Typography","axios","Grid","Button","useHistory","columns","id","label","minWidth","align","createData","poster","text","hostel","expiry","useStyles","root","width","margin","container","maxHeight","marginTop","title","color","calendar","background","ShowButton","border","StickyHeadTable","classes","page","setPage","rowsPerPage","setRowsPerPage","data","setData","date","setDate","Date","toISOString","slice","isLoading","setLoading","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","fetchData","res","get","notice","error","console","log","rows","map","item","description","expires_at","history","noticeBoard","push","e","column","row","format","code","length"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport axios from 'axios';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport {useHistory} from 'react-router-dom';\r\nconst columns = [\r\n    { id: 'poster', label: 'Notice Poster', minWidth: 170 },\r\n    { id: 'text', label: 'Notice Text', minWidth: 100 },\r\n    {\r\n        id: 'hostel',\r\n        label: 'Hostel',\r\n        minWidth: 170,\r\n        align: 'right',\r\n    },\r\n    {\r\n        id: 'expiry',\r\n        label: 'Expires On',\r\n        minWidth: 170,\r\n        align: 'right',\r\n    },\r\n\r\n];\r\n\r\nfunction createData(poster, text, hostel, expiry) {\r\n    return { poster, text, hostel, expiry };\r\n}\r\n// const rows=[createData(\"fbhb\",\"fjn\",\"fjen\",\"frr\")]\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '60%',\r\n        margin:'auto',\r\n    },\r\n    container: {\r\n        maxHeight: 380,\r\n        marginTop:'0.5rem'\r\n    },\r\n    title:{\r\n        color:'white',\r\n    },\r\n    calendar: {\r\n        background:'white',\r\n        \r\n    },\r\n    ShowButton: {\r\n        background: 'White',\r\n        color: 'Black',\r\n        // padding: '15px 15px 15px 15px',\r\n        marginTop: '2rem',\r\n        '&:hover': {\r\n            background: \"Black\",\r\n            color: \"white\",\r\n            border: \"1px solid white\",\r\n        }\r\n    },\r\n});\r\n\r\nexport default function StickyHeadTable() {\r\n    const classes = useStyles();\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const[data,setData] = useState([]);\r\n    const [date,setDate] =useState(new Date().toISOString().slice(0, 10))\r\n    const [isLoading,setLoading] =useState(false);\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n\r\n    };\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    \r\n    useEffect(()=>{\r\n        fetchData();\r\n    },[data,date])\r\n\r\n    \r\n\r\n\r\n    const fetchData = async ()=>{\r\n        try {\r\n            setLoading(true)\r\n            const res=await axios.get(`http://localhost:5000/notice/${date}`)\r\n            setData(res.data.notice);\r\n            setLoading(false)\r\n        } catch (error) {\r\n            setLoading(false)\r\n            console.log(error)\r\n        }\r\n    }\r\n    const rows= data.map(item=>createData(item.poster,item.description,item.hostel,item.expires_at))\r\n\r\n    let history = useHistory();\r\n    function noticeBoard() {\r\n        history.push('/add');\r\n    }\r\n    \r\n    return (\r\n    \r\n        <>\r\n            <Typography variant=\"h2\" className={classes.title}> NOTICES </Typography>\r\n\r\n            <TextField className={classes.calendar}\r\n            name={\"date\"}\r\n            value={date}\r\n            onChange={(e)=>setDate(e.target.value)}\r\n                icon=\"lock\"\r\n                type=\"Date\"\r\n              />\r\n               <Grid>\r\n                <Button variant=\"contained\" className={classes.ShowButton} onClick={noticeBoard}>\r\n                    Add Notice\r\n                </Button>\r\n            </Grid>\r\n            <Paper className={classes.root}>\r\n                <TableContainer className={classes.container}>\r\n                    <Table stickyHeader aria-label=\"sticky table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                {columns.map((column) => (\r\n                                    <TableCell\r\n                                        key={column.id}\r\n                                        align={column.align}\r\n                                        style={{ minWidth: column.minWidth }}\r\n                                    >\r\n                                        {column.label}\r\n                                    </TableCell>\r\n                                ))}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                                return (\r\n                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                                        {columns.map((column) => {\r\n                                            const value = row[column.id];\r\n                                            return (\r\n                                                <TableCell key={column.id} align={column.align}>\r\n                                                    {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                                                </TableCell>\r\n                                            );\r\n                                        })}\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n        </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}